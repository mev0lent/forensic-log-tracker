strings:
  default: >
    The tool `strings` was used to extract printable character sequences from a binary dump.
    This is forensically valid as it does not alter the dump and can reveal valuable hints like passwords or configuration files.
  -n: >
    The `-n` option sets the minimum length of character sequences to be extracted. It helps filter noise in large binaries.

dd:
  default: >
    `dd` was used to create a 1:1 copy of a disk. It is typically used in read-only mode and does not alter the original data. 
    A legally permissible method for acquiring digital evidence.
  if: >
    The `if=` option specifies the input file (e.g., a disk device like `/dev/sda`).
  of: >
    The `of=` option specifies the output file (e.g., a disk image).
  bs: >
    The `bs=` option sets the block size for read/write operations. It affects speed and granularity of the copy process.

ls:
  default: >
    `ls` lists files in a directory. It is used to gain an overview and does not modify data.

cd:
  default: >
    `cd` is used to change directories. It does not modify data and is forensically harmless.

sha1sum:
  default: >
    `sha1sum` computes a SHA-1 hash of a file. It is used for integrity checking and file identification.

md5sum:
  default: >
    `md5sum` generates an MD5 checksum of a file. Although cryptographically broken, it is still widely used for integrity checks in forensic practice.

unzip:
  default: >
    `unzip` extracts a ZIP archive. Since it changes data on the destination system, it should only be used in **virtual analysis environments** or on forensic clones.
  -d: >
    The `-d` option specifies the destination directory for extracted files. Useful to keep extracted data organized.

mmls:
  default: >
    `mmls` analyzes the partition layout of a disk image without modifying it. 
    It shows partitions, offsets, and sizes — a typical forensic step before mounting.
  -t: >
    The `-t` option specifies the partition table type (e.g., DOS, GPT).
  -b: >
    The `-b` option specifies the block size of the image. This ensures correct offset calculation.

mkdir:
  default: >
    `mkdir` creates a directory. In forensic workflows, it is often used to prepare target folders for mounts or exported data.
  -p: >
    The `-p` option ensures that parent directories are created as needed. It also avoids errors if the target directory already exists.

losetup:
  default: >
    `losetup` sets up a loop device to treat a file (like a disk image) as a block device.
    This is needed to work with partitions inside forensic disk images.
  -o: >
    The `-o` option sets the byte offset at which the loop device should start. 
    Useful for mounting specific partitions.
  --find: >
    Automatically finds the next available loop device (e.g., `/dev/loop0`).
  --show: >
    Outputs the created loop device — useful for automation and scripting.

mount:
  default: >
    `mount` is used to attach a filesystem to the directory tree. In forensic contexts, it must be used cautiously, as mounting can alter timestamps or content.
  -o: >
    The `-o` option sets mount parameters — e.g., to enable read-only mode or suppress timestamp changes.
  ro: >
    `ro` stands for "read-only". It ensures that the mounted filesystem is not modified. This is critical in digital forensics.
  loop: >
    The `loop` option allows mounting of files as block devices (e.g., disk images). Often used in conjunction with or instead of `losetup`.
  noatime: >
    `noatime` prevents updating access timestamps when reading files. This minimizes changes to the mounted filesystem.
